# ======================================================
# REDIRECT ALL HTTP TO HTTPS (Let's Encrypt challenge allowed)
# ======================================================
server {
    listen 80;
    server_name api.gridsparksolutions.com;

    # Allow Let's Encrypt to verify domain ownership
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect everything else to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# ======================================================
# MAIN HTTPS SERVER BLOCK
# ======================================================
server {
    listen 443 ssl http2;
    server_name api.gridsparksolutions.com;

    # === SSL Configuration ===
    ssl_certificate /etc/letsencrypt/live/api.gridsparksolutions.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.gridsparksolutions.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256';

    # === Security Headers ===
    add_header X-Content-Type-Options "nosniff";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # === CORS (for frontend hosted on Azure Static Web Apps) ===
    # Adjust if your frontend domain changes
    set $cors_origin "";
    if ($http_origin ~* ^https?://(www\.)?gridsparksolutions\.com$) {
        set $cors_origin $http_origin;
    }

    add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    # Handle preflight requests
    if ($request_method = OPTIONS) {
        return 204;
    }

    # === Proxy Configuration ===
    location / {
        proxy_pass http://app:3000;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeout & buffering
        proxy_connect_timeout 60s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        proxy_buffering on;
    }

    # === Gzip Compression ===
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 256;
    gzip_vary on;

    # === Logging ===
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;
}
