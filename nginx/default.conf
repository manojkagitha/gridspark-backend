server {
    listen 80;
    server_name gridsparksolutions.com www.gridsparksolutions.com;

    # Proxy API requests to Node.js backend
    location /api/ {
        proxy_pass http://app:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
# Server block to handle HTTP to HTTPS redirection and Let's Encrypt challenges
server {
    listen 80;
    server_name api.gridsparksolutions.com;

    # Route for Let's Encrypt certificate validation
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Server block for handling secure HTTPS traffic
server {
    listen 443 ssl;
    server_name api.gridsparksolutions.com;

    # SSL Certificate paths (Certbot will create these)
    ssl_certificate /etc/letsencrypt/live/api.gridsparksolutions.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.gridsparksolutions.com/privkey.pem;

    # Proxy configuration for the backend Node.js application
    location /api {
        proxy_pass http://app:3000; # Forward to the 'app' service on port 3000
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
    # Serve frontend static files for all other requests
    location / {
        root /usr/share/nginx/html; # Path to your built frontend files (adjust if different)
        try_files $uri $uri/ /index.html;
    }
}
